# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IHRraW50ZXIKaW1wb3J0IHN1YnByb2Nlc3MKZnJvbSB0a2ludGVyIGltcG9ydCAqCmZyb20gdGtpbnRlciBpbXBvcnQgZmlsZWRpYWxvZwppbXBvcnQgdGtpbnRlciBhcyB0awpmcm9tIHRraW50ZXIgaW1wb3J0IHR0awpmcm9tIHRraW50ZXIgaW1wb3J0IG1lc3NhZ2Vib3gKaW1wb3J0IHRraW50ZXIuZm9udCBhcyBmb250CmZyb20gdHVydGxlIGltcG9ydCB3aWR0aApmcm9tIFBJTCBpbXBvcnQgSW1hZ2VUaywgSW1hZ2UKaW1wb3J0IHVybGxpYi5yZXF1ZXN0CmZyb20gaW8gaW1wb3J0IEJ5dGVzSU8KaW1wb3J0IG9zCmltcG9ydCBpbwppbXBvcnQgc3lzCmltcG9ydCBwaWNrbGUKaW1wb3J0IHRpbWUKZnJvbSBkZWNpbWFsIGltcG9ydCAqCmltcG9ydCB3ZWJicm93c2VyCiMgZnJvbSBjbGljayBpbXBvcnQgY29tbWFuZApmcm9tIHNlbGVuaXVtIGltcG9ydCB3ZWJkcml2ZXIKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LndhaXQgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY2hyb21lLm9wdGlvbnMgaW1wb3J0IE9wdGlvbnMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydCBpbXBvcnQgZXhwZWN0ZWRfY29uZGl0aW9ucyBhcyBFeHBlY3RlZENvbmRpdGlvbnMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgU2VsZWN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5rZXlzIGltcG9ydCBLZXlzCmZyb20gZGF0ZXRpbWUgaW1wb3J0IHRpbWVkZWx0YSAgCmZyb20gZGF0ZXV0aWwucmVsYXRpdmVkZWx0YSBpbXBvcnQgcmVsYXRpdmVkZWx0YQpmcm9tIGRhdGV0aW1lIGltcG9ydCB0aW1lZGVsdGEsIGRhdGUKaW1wb3J0IGxvY2FsZQppbXBvcnQganNvbiAKaW1wb3J0IHNzbAppbXBvcnQgY2VydGlmaQoKc3NsLl9jcmVhdGVfZGVmYXVsdF9odHRwc19jb250ZXh0ID0gc3NsLl9jcmVhdGVfdW52ZXJpZmllZF9jb250ZXh0CgojY2hlY2sgbG9jYWwgZGF0ZSBmb3JtYXQKbG9jYWxlLnNldGxvY2FsZShsb2NhbGUuTENfQUxMLCAnJykKbGFzdGRhdGUgPSBkYXRlKGRhdGUudG9kYXkoKS55ZWFyLCAxMiwgMzEpCgpyb290ID0gVGsoKQoKcm9vdC5nZW9tZXRyeSgnNzUweDg1MCcpCnJvb3QucmVzaXphYmxlKEZhbHNlLCBGYWxzZSkKcm9vdC50aXRsZSgiTkZUcyBVcGxvYWQgdG8gT3BlblNlYSB2MS44IikKICAKaW5wdXRfc2F2ZV9saXN0ID0gWyJORlRzIGZvbGRlciA6IiwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMCwgMF0KbWFpbl9kaXJlY3RvcnkgPSBvcy5wYXRoLmpvaW4oc3lzLnBhdGhbMF0pCgoKZGVmIHN1cHBvcnRVUkwoKToKICAgIHdlYmJyb3dzZXIub3Blbl9uZXcoImh0dHBzOi8vd3d3LmluZm90cmV4Lm5ldC9vcGVuc2VhL3N1cHBvcnQuYXNwP3I9YXBwIikKCmRlZiBjb2ZmZWVVUkwoKToKICAgIHdlYmJyb3dzZXIub3Blbl9uZXcoImh0dHBzOi8vZ2l0aHViLmNvbS9pbmZvdHJleC9idWxrLXVwbG9hZC10by1vcGVuc2VhLyN0aGFua3MiKQoKY2xhc3MgV2ViSW1hZ2U6CiAgICBkZWYgX19pbml0X18oc2VsZiwgdXJsKToKICAgICAgICB3aXRoIHVybGxpYi5yZXF1ZXN0LnVybG9wZW4odXJsKSBhcyB1OgogICAgICAgICAgICByYXdfZGF0YSA9IHUucmVhZCgpCiAgICAgICAgI3NlbGYuaW1hZ2UgPSB0ay5QaG90b0ltYWdlKGRhdGE9YmFzZTY0LmVuY29kZWJ5dGVzKHJhd19kYXRhKSkKICAgICAgICBpbWFnZSA9IEltYWdlLm9wZW4oaW8uQnl0ZXNJTyhyYXdfZGF0YSkpCiAgICAgICAgc2VsZi5pbWFnZSA9IEltYWdlVGsuUGhvdG9JbWFnZShpbWFnZSkKCiAgICBkZWYgZ2V0KHNlbGYpOgogICAgICAgIHJldHVybiBzZWxmLmltYWdlCmltYWdldXJsID0gImh0dHBzOi8vd3d3LmluZm90cmV4Lm5ldC9vcGVuc2VhL2hlYWRlci5wbmciCmltZyA9IFdlYkltYWdlKGltYWdldXJsKS5nZXQoKQppbWFnZWxhYiA9IHRrLkxhYmVsKHJvb3QsIGltYWdlPWltZykKaW1hZ2VsYWIuZ3JpZChyb3c9MCwgY29sdW1uc3Bhbj0yKQppbWFnZWxhYi5iaW5kKCI8QnV0dG9uLTE+IiwgbGFtYmRhIGU6c3VwcG9ydFVSTCgpKQoKaXNfcG9seWdvbiA9IEJvb2xlYW5WYXIoKQppc19wb2x5Z29uLnNldChUcnVlKQoKaXNfbGlzdGluZyA9IEJvb2xlYW5WYXIoKQppc19saXN0aW5nLnNldChUcnVlKSAKCmlzX251bWZvcm1hdCA9IEJvb2xlYW5WYXIoKQppc19udW1mb3JtYXQuc2V0KEZhbHNlKSAKCgpkZWYgc2F2ZV9kdXJhdGlvbigpOgogICAgZHVyYXRpb25fdmFsdWUuc2V0KHZhbHVlPWR1cmF0aW9uX3ZhbHVlLmdldCgpKQogICAgIyBwcmludChkdXJhdGlvbl92YWx1ZS5nZXQoKSkKCmRlZiBvcGVuX2Nocm9tZV9wcm9maWxlKCk6CiAgICBzdWJwcm9jZXNzLlBvcGVuKAogICAgICAgIFsKICAgICAgICAgICAgInN0YXJ0IiwKICAgICAgICAgICAgImNocm9tZSIsCiAgICAgICAgICAgICItLXJlbW90ZS1kZWJ1Z2dpbmctcG9ydD04OTg5IiwKICAgICAgICAgICAgIi0tdXNlci1kYXRhLWRpcj0iICsgbWFpbl9kaXJlY3RvcnkgKyAiL2Nocm9tZV9wcm9maWxlIiwKICAgICAgICBdLAogICAgICAgIHNoZWxsPVRydWUsCiAgICApCgoKZGVmIHNhdmVfZmlsZV9wYXRoKCk6CiAgICAjcmV0dXJuIG9zLnBhdGguam9pbihzeXMucGF0aFswXSwgIlNhdmVfZmlsZS5jbG91ZCIpIAogICAgcmV0dXJuIG9zLnBhdGguam9pbihzeXMucGF0aFswXSwgIlNhdmVfZ3VpLmNsb3VkIikgCgoKIyBhc2sgZm9yIGRpcmVjdG9yeSBvbiBjbGlja2luZyBidXR0b24sIGNoYW5nZXMgYnV0dG9uIG5hbWUuCmRlZiB1cGxvYWRfZm9sZGVyX2lucHV0KCk6CiAgICBnbG9iYWwgdXBsb2FkX3BhdGgKICAgIHVwbG9hZF9wYXRoID0gZmlsZWRpYWxvZy5hc2tkaXJlY3RvcnkoKQogICAgTmFtZV9jaGFuZ2VfaW1nX2ZvbGRlcl9idXR0b24odXBsb2FkX3BhdGgpCgpkZWYgTmFtZV9jaGFuZ2VfaW1nX2ZvbGRlcl9idXR0b24odXBsb2FkX2ZvbGRlcl9pbnB1dCk6CiAgICB1cGxvYWRfZm9sZGVyX2lucHV0X2J1dHRvblsidGV4dCJdID0gdXBsb2FkX2ZvbGRlcl9pbnB1dAoKZGVmIGlzX251bWVyaWModmFsKToKCWlmIHN0cih2YWwpLmlzZGlnaXQoKToKCQlyZXR1cm4gVHJ1ZQoJZWxpZiBzdHIodmFsKS5yZXBsYWNlKCcuJywnJywxKS5pc2RpZ2l0KCk6CgkJcmV0dXJuIFRydWUKCWVsc2U6CgkJcmV0dXJuIEZhbHNlCgoKY2xhc3MgSW5wdXRGaWVsZDoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBsYWJlbCwgcm93X2lvLCBjb2x1bW5faW8sIHBvcywgIG1hc3Rlcj1yb290KToKICAgICAgICBzZWxmLm1hc3RlciA9IG1hc3RlcgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQgPSBFbnRyeShzZWxmLm1hc3Rlciwgd2lkdGg9NjApCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5ncmlkKGlwYWR5PTMpCiAgICAgICAgc2VsZi5pbnB1dF9maWVsZC5sYWJlbCA9IExhYmVsKG1hc3RlciwgdGV4dD1sYWJlbCwgYW5jaG9yPSJ3Iiwgd2lkdGg9MjAsIGhlaWdodD0xICkKICAgICAgICBzZWxmLmlucHV0X2ZpZWxkLmxhYmVsLmdyaWQocm93PXJvd19pbywgY29sdW1uPWNvbHVtbl9pbywgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZ3JpZChyb3c9cm93X2lvLCBjb2x1bW49Y29sdW1uX2lvICsgMSwgcGFkeD0xMiwgcGFkeT0yKQogICAgICAgIAogICAgICAgIHRyeToKICAgICAgICAgICAgd2l0aCBvcGVuKHNhdmVfZmlsZV9wYXRoKCksICJyYiIpIGFzIGluZmlsZToKICAgICAgICAgICAgICAgIG5ld19kaWN0ID0gcGlja2xlLmxvYWQoaW5maWxlKQogICAgICAgICAgICAgICAgc2VsZi5pbnNlcnRfdGV4dChuZXdfZGljdFtwb3NdKQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICAgICAgcGFzcwogICAgICAgIAogICAgZGVmIGluc2VydF90ZXh0KHNlbGYsIHRleHQpOgogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuZGVsZXRlKDAsICJlbmQiKQogICAgICAgIHNlbGYuaW5wdXRfZmllbGQuaW5zZXJ0KDAsIHRleHQpCgogICAgZGVmIHNhdmVfaW5wdXRzKHNlbGYsIHBvcyk6CiAgICAgICAgI21lc3NhZ2Vib3guc2hvd3dhcm5pbmcoInNob3d3YXJuaW5nIiwgIldhcm5pbmciKQogICAgICAgIGlucHV0X3NhdmVfbGlzdC5pbnNlcnQocG9zLCBzZWxmLmlucHV0X2ZpZWxkLmdldCgpKQogICAgICAgICNwcmludChzZWxmLmlucHV0X2ZpZWxkLmdldCgpKQogICAgICAgIHdpdGggb3BlbihzYXZlX2ZpbGVfcGF0aCgpLCAid2IiKSBhcyBvdXRmaWxlOgogICAgICAgICAgICBwaWNrbGUuZHVtcChpbnB1dF9zYXZlX2xpc3QsIG91dGZpbGUpCiAgICAgICAgICAgIAogICAgZGVmIHZhbGlkYXRlX2lucHV0cyhzZWxmLCBtYXhsZW4sIHR5cGUsIG1lc3NhZ2UpOgoKICAgICAgICBpZiB0eXBlID09IDAgYW5kIChsZW4oc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkgPT0gMCBvciAoc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkuaXNkaWdpdCgpICE9IFRydWUgb3IgbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID4gbWF4bGVuKToKICAgICAgICAgICAgbWVzc2FnZWJveC5zaG93d2FybmluZygic2hvd3dhcm5pbmciLCBtZXNzYWdlKQogICAgICAgICAgICAgICAgCiAgICAgICAgZWxpZiB0eXBlID09IDEgYW5kIChsZW4oc2VsZi5pbnB1dF9maWVsZC5nZXQoKSkgPT0gMCBvciBpc19udW1lcmljKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID09IEZhbHNlIG9yIGxlbihzZWxmLmlucHV0X2ZpZWxkLmdldCgpKSA+PSBtYXhsZW4pOgogICAgICAgICAgICBtZXNzYWdlYm94LnNob3d3YXJuaW5nKCJzaG93d2FybmluZyIsIG1lc3NhZ2UpICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgZWxpZiB0eXBlID09IDIgYW5kICggbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID09IDAgb3IgbGVuKHNlbGYuaW5wdXRfZmllbGQuZ2V0KCkpID4gbWF4bGVuKToKICAgICAgICAgICAgbWVzc2FnZWJveC5zaG93d2FybmluZygic2hvd3dhcm5pbmciLCBtZXNzYWdlKQogICAgICAgICAgICAgICAKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gVHJ1ZSAgICAgCiAgICAgICAgCgojIyNpbnB1dCBvYmplY3RzIyMjCmNvbGxlY3Rpb25fbGlua19pbnB1dCA9IElucHV0RmllbGQoIk9wZW5TZWEgQ29sbGVjdGlvbiBMaW5rOiIsIDIsIDAsIDEpCnN0YXJ0X251bV9pbnB1dCA9IElucHV0RmllbGQoIlN0YXJ0IE51bWJlcjoiLCAzLCAwLCAyKQplbmRfbnVtX2lucHV0ID0gSW5wdXRGaWVsZCgiRW5kIE51bWJlcjoiLCA0LCAwLCAzKQpwcmljZSA9IElucHV0RmllbGQoIkRlZmF1bHQgUHJpY2U6IiwgNSwgMCwgNCkKdGl0bGUgPSBJbnB1dEZpZWxkKCJUaXRsZToiLCA2LCAwLCA1KQpkZXNjcmlwdGlvbiA9IElucHV0RmllbGQoIkRlc2Nya'
love = 'KO0nJ9hBvVfVQpfVQNfVQLcPzMcoTIsMz9loJS0VQ0tFJ5jqKETnJIfMPtvGxMHVRygLJqyVRMipz1uqQbvYPN4YPNjYPN3XDcyrUEypz5uoS9fnJ5eVQ0tFJ5jqKETnJIfMPtvEKu0MKWhLJjtoTyhnmbvYPN5YPNjYPN4XDbXPvZwV3AuqzHtnJ5jqKEmVlZwPzEyMvOmLKMyXPx6PtbtVPNtnJLtoTIhXUA0LKW0K251oI9coaO1qP5coaO1qS9znJIfMP5aMKDbXFxtCG0tZPOipvOfMJ4bMJ5xK251oI9coaO1qP5coaO1qS9znJIfMP5aMKDbXFxtCG0tZPOipvNbnJ50XTIhMS9hqJ1snJ5jqKDhnJ5jqKEsMzyyoTDhM2I0XPxcVQjtnJ50XUA0LKW0K251oI9coaO1qP5coaO1qS9znJIfMP5aMKDbXFxcBtbtVPNtVPNtVPAgMKAmLJqyLz94YaAbo3q3LKWhnJ5aXPWmnT93q2SlozyhMlVfVPWSozDtoaIgLzIlVUAbo3IfMPOapzIuqTIlVUEbLJ4tp3EupaDtoaIgLzIlVFVcPvNtVPNtVPNtV3WyqUIlovOHpaIyPvNtVPNtVPNtpUWcoaDtXPW0paIyVvxXVPNtVTIfnJLtoTIhXPOmqTSlqS9hqJ1snJ5jqKDhnJ5jqKEsMzyyoTDhM2I0XPxcVQ09VQNto3VtoTIhXTIhMS9hqJ1snJ5jqKDhnJ5jqKEsMzyyoTDhM2I0XPxcVQ4tAPN6PvNtVPNtVPNtV21yp3AuM2Ivo3thp2uiq3qupz5cozpbVaAbo3q3LKWhnJ5aVvjtVyA0LKW0VP8tMJ5xVT51oJWypvOlLJ5aMFNjVP0tBGx5BFVcPvNtVPNtVPNtV3WyqUIlovOHpaIyPvNtVPNtVPNtpUWcoaDtXPW0paIyVvxXVPNtVTIfp2H6PvNtVPNtVPNtL29foTIwqTyioy9fnJ5eK2yhpUI0YaMuoTyxLKEyK2yhpUI0pltlZQNfVQVfVPqQo2kfMJA0nJ9hVTkcozftpzIkqJylMJDaXDbtVPNtVPNtVUOlnJAyYaMuoTyxLKEyK2yhpUI0pltkZQNfVQRfVPqDpzywMFOlMKS1nKWyMPpcPvNtVPNtVPNtqTy0oTHhqzSfnJEuqTIsnJ5jqKEmXQRjZPjtZvjtW3EcqTkyVUWypKIcpzIxWlxXVPNtVPNtVPOxMKAwpzyjqTyiov52LJkcMTS0MI9coaO1qUZbZwNjYPNlYPNaMTImL3WcpUEco24tpzIkqJylMJDaXDbtVPNtVPNtVTMcoTIsMz9loJS0YaMuoTyxLKEyK2yhpUI0pltkZQNfVQVfVPqznJkyVTMipz1uqPOlMKS1nKWyMPNgVUOhMljtnaOaYPOdpTIaWlxXVPNtVPNtVPOyrUEypz5uoS9fnJ5eYaMuoTyxLKEyK2yhpUI0pltkZQNfVQZfVPpaXDbtVPNtVNbXVPNtVTyhpUI0K3AuqzIsoTymqP5coaAypaDbZPjtqKOfo2SxK3OuqTtcPvNtVPOwo2kfMJA0nJ9hK2kcozgsnJ5jqKDhp2S2MI9coaO1qUZbZFxXVPNtVUA0LKW0K251oI9coaO1qP5mLKMyK2yhpUI0pltlXDbtVPNtMJ5xK251oI9coaO1qP5mLKMyK2yhpUI0pltmXDbtVPNtpUWcL2Hhp2S2MI9coaO1qUZbAPxXVPNtVUEcqTkyYaAuqzIsnJ5jqKEmXQHcPvNtVPOxMKAwpzyjqTyiov5mLKMyK2yhpUI0plt2XDbtVPNtMzyfMI9zo3WgLKDhp2S2MI9coaO1qUZbAlxXVPNtVTI4qTIlozSfK2kcozfhp2S2MI9coaO1qUZbBPxXVPNtVNbXVPNtVNbXVlOsK19sK01OFH5sD09REI9sK19sPzEyMvOgLJyhK3Olo2qlLJ1soT9ipPtcBtbtVlZwH1EOHyDwVlZXVPNtVTyzVTkyovuyozEsoaIgK2yhpUI0YzyhpUI0K2McMJkxYzqyqPtcXFN+VQDtBtbtVPNtVPNtVT1yp3AuM2Ivo3thp2uiq3qupz5cozpbVaAbo3q3LKWhnJ5aVvjtVyA0LKW0VP8tMJ5xVT51oJWypvOlLJ5aMFNjVP0tBGx5BFVcPvNtVPNtVPNtp3ymYzI4nKDbXDbXVPNtVUOlo2cyL3EspTS0nPN9VT1unJ5sMTylMJA0o3W5PvNtVPOznJkyK3OuqTttCFO1pTkiLJEspTS0nNbtVPNtL29foTIwqTyioy9fnJ5eVQ0tL29foTIwqTyioy9fnJ5eK2yhpUI0YzyhpUI0K2McMJkxYzqyqPtcPvNtVPOmqTSlqS9hqJ0tCFOcoaDbp3EupaEsoaIgK2yhpUI0YzyhpUI0K2McMJkxYzqyqPtcXDbtVPNtMJ5xK251oFN9VTyhqPuyozEsoaIgK2yhpUI0YzyhpUI0K2McMJkxYzqyqPtcXDbtVPNtoT9ipS9jpzywMFN9VTMfo2S0XUOlnJAyYzyhpUI0K2McMJkxYzqyqPtcXDbtVPNtoT9ipS90nKEfMFN9VUEcqTkyYzyhpUI0K2McMJkxYzqyqPtcPvNtVPOfo29jK2McoTIsMz9loJS0VQ0tMzyfMI9zo3WgLKDhnJ5jqKEsMzyyoTDhM2I0XPxXVPNtVTkio3OsMKu0MKWhLJksoTyhnlN9VUA0pvuyrUEypz5uoS9fnJ5eYzyhpUI0K2McMJkxYzqyqPtcXDbtVPNtoT9ipS9xMKAwpzyjqTyiovN9VTEyp2AlnKO0nJ9hYzyhpUI0K2McMJkxYzqyqPtcPtbtVPNtVlAwnUWioJIipUEco25mPvNtVPOipUDtCFOCpUEco25mXPxXVPNtVT9jqP5uMTEsLKWaqJ1yoaDbWl0gnTIuMTkyp3ZaXDbtVPNto3O0YzSxMS9yrUOypzygMJ50LJkso3O0nJ9hXPWxMJW1M2qypxSxMUWyp3ZvYPNvoT9wLJkbo3A0Bwt5BQxvXDbtVPNtMUWcqzIlVQ0tq2IvMUWcqzIlYxAbpz9gMFtXVPNtVPNtVPOyrTIwqKEuLzkyK3OuqTt9pUWinzIwqS9jLKEbVPftVv9wnUWioJIxpzy2MKVvYNbtVPNtVPNtVTAbpz9gMI9ipUEco25mCJ9jqPjXVPNtVPxXVPNtVUqunKDtCFOKMJWRpzy2MKWKLJy0XTElnKMypvjtAwNcPtbtVPNtVlZwq2ScqPOzo3VtoJI0nT9xpjbtVPNtMTIzVUqunKEsL3AmK3AyoTIwqT9lXTAiMTHcBtbtVPNtVPNtVUqunKDhqJ50nJjbPvNtVPNtVPNtVPNtVRI4pTIwqTIxD29hMTy0nJ9hpl5jpzImMJ5wMI9iMy9yoTIgMJ50K2kiL2S0MJDbXRW5YxAGH19GEHkSD1ECHvjtL29xMFxcPvNtVPNtVPNtXDbtVPNtVPNtVNbtVPNtMTIzVUqunKEsL3AmK3AyoTIwqT9lITImqPuwo2EyXGbXVPNtVPNtVPO3LJy0YaIhqTyfXNbtVPNtVPNtVPNtVPOSrUOyL3EyMRAiozEcqTyioaZhMJkyoJIhqSEiDzIQoTywn2SvoTHbXRW5YxAGH19GEHkSD1ECHvjtL29xMFxcPvNtVPNtVPNtXFNtVPNXPvNtVPOxMJLtq2ScqS94pTS0nPuwo2EyXGbXVPNtVPNtVPO3LJy0YaIhqTyfXRI4pTIwqTIxD29hMTy0nJ9hpl5jpzImMJ5wMI9iMy9yoTIgMJ50K2kiL2S0MJDbXRW5YyuDDIEVYPOwo2EyXFxcPtbXVPNtVUqbnJkyVTIhMS9hqJ0tCw0tp3EupaEsoaIgBtbtVPNtVPNtVTyzVTymK251oJMipz1uqP5aMKDbXGbXVPNtVPNtVPNtVPNtp3EupaEsoaIgMz9loJS0VQ0tMvW7VUA0LKW0K251oGbjAU0vPvNtVPNtVPNtMJkmMGbXVPNtVPNtVPNtVPNtVUA0LKW0K251oJMipz1uqPN9VTLvrlOmqTSlqS9hqJ06ZQS9VtbXVPNtVPNtVPOjpzyhqPtvH3EupaDtL3WyLKEcozptGxMHVPVtXlNtoT9ipS90nKEfMFNeVUA0pvumqTSlqS9hqJ1zo3WgLKDcXDbtVPNtVPNtVUOlnJ50XPqhqJ1vMKVtWljtVUA0LKW0K251oJMipz1uqPxXVPNtVPNtVPOxpzy2MKVhM2I0XTAioTkyL3Eco25soTyhnlxXVPNtVPNtVPNXVPNtVPNtVPNXVPNtVPNtVPO3LJy0K3ujLKEbXPpiYlcoDTyxCFWgMJEcLFWqWlxXVPNtVPNtVPOcoJSaMIIjoT9uMPN9VTElnKMypv5znJ5xK2IfMJ1yoaEsLaysrUOuqTtbWl8iXygNnJD9Vz1yMTyuVy0aXDbtVPNtVPNtVTygLJqyHTS0nPN9VT9mYaOuqTthLJWmpTS0nPuznJkyK3OuqTttXlNvKSkcoJSaMKApKPVtXlOmqUVbp3EupaEsoaIgMz9loJS0XFNeVPVhVvNeVTkio3OsMzyfMI9zo3WgLKDcVPNwVTAbLJ5aMFOzo2kxMKVtnTIlMDbtVPNtVPNtVTygLJqyIKOfo2SxYaAyozEsn2I5plucoJSaMIOuqTtcPvNtVPNtVPNtqTygMF5moTIypPtjYwtcPtbtVPNtVPNtVT5uoJHtCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpiYlcoDTyxCFWhLJ1yVy0aXDbtVPNtVPNtVT5uoJHhp2IhMS9eMKymXTkio3OsqTy0oTHtXlOmqUVbp3EupaEsoaIgMz9loJS0XFxtVPZtXmRjZQNtMz9lVT90nTIlVTMioTEypaZtV2AbLJ5aMFOhLJ1yVTWyMz9lMFNvVlVXVPNtVPNtVPO0nJ1yYaAfMJIjXQNhBPxXPvNtVPNtVPNtMKu0K2kcozftCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpiYlcoDTyxCFWyrUEypz5uoS9fnJ5eVy0aXDbtVPNtVPNtVTI4qS9fnJ5eYaAyozEsn2I5plufo29jK2I4qTIlozSfK2kcozfcPvNtVPNtVPNtqTygMF5moTIypPtjYwtcPtbtVPNtVPNtVTEyp2ZtCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpiYlcoDTyxCFWxMKAwpzyjqTyiovWqWlxXVPNtVPNtVPOxMKAwYaAyozEsn2I5plufo29jK2Eyp2AlnKO0nJ9hXDbtVPNtVPNtVUEcoJHhp2kyMKNbZP44XDbXVPNtVPNtVPNwnaAioxEuqTRtCFOXH09BXTMcoTIspTS0nPNeVPVinaAiov8vXlOmqUVbp3EupaEsoaIgXFNeVPVhnaAiovVcYaWyLJETpz9gEzyfMFtcPtbtVPNtVPNtVTcmo25TnJkyVQ0tMzyfMI9jLKEbVPftVv9dp29hYlVeVUA0pvumqTSlqS9hqJ1zo3WgLKDcVPftVv5dp29hVtbtVPNtVPNtVTyzVT9mYaOuqTthnKAznJkyXTcmo25TnJkyXFOuozDto3ZhLJAwMKAmXTcmo25TnJkyYPOipl5FK09YXGbXVPNtVPNtVPNtVPNXVPNtVPNtVPNtVPNtV3OlnJ50XUA0pvudp29hGJI0LHEuqTRcXDbtVPNtVPNtVPNtVPO3LJy0K2Amp19mMJkyL3EipvtvLaI0qT9hJ2SlnJRgoTSvMJj9W0SxMPOjpz9jMKW0nJImW10vXDbtVPNtVPNtVPNtVPOjpz9jMKW0nJImVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI9wp3Asp2IfMJA0o3VbVzW1qUEioygupzyuYJkuLzIfCFqOMTDtpUWipTIlqTyyplqqVvxXVPNtVPNtVPNtVPNtMUWcqzIlYzI4MJA1qTIsp2AlnKO0XPWupzq1oJIhqUAoZS0hL2kcL2fbXGfvYPOjpz9jMKW0nJImXDbtVPNtVPNtVPNtVPO0nJ1yYaAfMJIjXQNhBPxXPvNtVPNtVPNtVPNtVPZtnaAioxEuqTRtCFOXH09BXT9mYzqyqTA3MPtcVPftVv9xLKEuYlVeVUA0pvumqTSlqS9hqJ0cVPftVv5dp29hVvxhpzIuMRMlo21TnJkyXPxXVPNtVPNtVPNtVPNtVlOdp29hGJI0LHEuqTRtCFOdp29hETS0LIfaLKE0pzyvqKEyplqqPtbtVPNtVPNtVPNtVPNtVlOwnTIwn3ZtnJLtMzyfMFOyrTymqUZXVPNtVPNtVPNtVPNtnaAioxEuqTRtCFOdp29hYzkiLJEmXT9jMJ4bMzyfMI9jLKEbVPftVykpnaAioykpVvftp3ElXUA0LKW0K251oJMipz1uqPxtXlNvYzcmo24vXF5lMJSxXPxcPvNtVPNtVPNtVPNtVTcmo25AMKEuETS0LFN9VTcmo25RLKEuJlquqUElnJW1qTImW10XPvNtVPNtVPNtVPNtVTMipvOeMKxtnJ4tnaAiox1yqTSRLKEuBtbtVPNtVPNtVPNtVPNtVPNtnJ5jqKDkVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI94pTS0nPtaYl90Lz9xrIgNL2kup3Z9VxSmp2I0IUWunKEmEz9loF0gLz9xrFWqY3ElJ2kup3DbXI0iqTEoZI0iMTy2Y2Ecqv9coaO1qPpcPvNtVPNtVPNtVPNtVPNtVPOcoaO1qQVtCFOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpiY3Evo2E5J0OwoTSmpm0vDKAmMKEHpzScqUATo3WgYF1vo2E5Vy0iqUWooTSmqPtcKF90MSflKF9xnKLiMTy2Y2yhpUI0WlxXVPNtVPNtVPNtVPNtVPNtVPAjpzyhqPumqUVbn2I5Jlq0pzScqS90rKOyW10cXDbtVPNtVPNtVPNtVPNtVPNtV3OlnJ50XUA0pvueMKyoW3MuoUIyW10cXDbtVPNtVPNtVPNtVPNtVPNtnJ5jqKDkYaAyozEsn2I5plumqUVbn2I5Jlq0pzScqS90rKOyW10cXDbtVPNtVPNtVPNtVPNtVPNtnJ5jqKDlYaAyozEsn2I5plumqUVbn2I5Jlq2LJk1MFqqXF'
god = 'kKICAgICAgICAgICAgICAgICMgZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy9idXR0b25bdGV4dCgpPSJBZGQgbW9yZSJdJykuY2xpY2soKQogICAgICAgICAgICAgICAgYWRkbW9yZV9idXR0b24gPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvL2J1dHRvblt0ZXh0KCk9IkFkZCBtb3JlIl0nKQogICAgICAgICAgICAgICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uY2xpY2soKTsiLCBhZGRtb3JlX2J1dHRvbikKICAgICAgICAgICAgdGltZS5zbGVlcCgwLjkpCgogICAgICAgICAgICBkcml2ZXIuZmluZF9lbGVtZW50X2J5X3hwYXRoKCcvL2J1dHRvblt0ZXh0KCk9IlNhdmUiXScpLmNsaWNrKCkKICAgICAgICAgICAgdGltZS5zbGVlcCgwLjgpCgoKCiAgICAgICAgIyBTZWxlY3QgUG9seWdvbiBibG9ja2NoYWluIGlmIGFwcGxpY2FibGUKICAgICAgICAjaWYgaXNfcG9seWdvbi5nZXQoKToKICAgICAgICAgICAgIyBibG9ja2NoYWluX2J1dHRvbiA9IGRyaXZlci5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICcvLypbQGlkPSJfX25leHQiXS9kaXZbMV0vbWFpbi9kaXYvZGl2L3NlY3Rpb24vZGl2L2Zvcm0vZGl2WzddL2Rpdi9kaXZbMl0nKQogICAgICAgICAgICAjIGJsb2NrY2hhaW5fYnV0dG9uLmNsaWNrKCkKICAgICAgICAgICAgIyBwb2x5Z29uX2J1dHRvbl9sb2NhdGlvbiA9ICcvL3NwYW5bbm9ybWFsaXplLXNwYWNlKCkgPSAiTXVtYmFpIl0nCiAgICAgICAgICAgICMgd2FpdC51bnRpbChFeHBlY3RlZENvbmRpdGlvbnMucHJlc2VuY2Vfb2ZfZWxlbWVudF9sb2NhdGVkKAogICAgICAgICAgICAjICAgICAoQnkuWFBBVEgsIHBvbHlnb25fYnV0dG9uX2xvY2F0aW9uKSkpCiAgICAgICAgICAgICMgcG9seWdvbl9idXR0b24gPSBkcml2ZXIuZmluZF9lbGVtZW50KAogICAgICAgICAgICAjICAgICBCeS5YUEFUSCwgcG9seWdvbl9idXR0b25fbG9jYXRpb24pCiAgICAgICAgICAgICMgcG9seWdvbl9idXR0b24uY2xpY2soKQoKCiAgICAgICAgY3JlYXRlID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0iX19uZXh0Il0vZGl2WzFdL21haW4vZGl2L2Rpdi9zZWN0aW9uL2RpdlsyXS9mb3JtL2Rpdi9kaXZbMV0vc3Bhbi9idXR0b24nKQogICAgICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLmNsaWNrKCk7IiwgY3JlYXRlKQogICAgICAgIHRpbWUuc2xlZXAoMC44KQoKICAgICAgICAjIHdhaXRfY3NzX3NlbGVjdG9yKCJpW2FyaWEtbGFiZWw9J0Nsb3NlJ10iKQogICAgICAgICMgY3Jvc3MgPSBkcml2ZXIuZmluZF9lbGVtZW50X2J5X2Nzc19zZWxlY3RvcigiaVthcmlhLWxhYmVsPSdDbG9zZSddIikKICAgICAgICAjIGNyb3NzLmNsaWNrKCkKCiAgICAgICAgd2FpdF94cGF0aCgnL2h0bWwvYm9keS9kaXZbNV0vZGl2L2Rpdi9kaXYvZGl2WzJdL2J1dHRvbi9pJykKICAgICAgICBjcm9zcyA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy9odG1sL2JvZHkvZGl2WzVdL2Rpdi9kaXYvZGl2L2RpdlsyXS9idXR0b24vaScpCiAgICAgICAgY3Jvc3MuY2xpY2soKQogICAgICAgIHRpbWUuc2xlZXAoMC44KQoKICAgICAgICBtYWluX3BhZ2UgPSBkcml2ZXIuY3VycmVudF93aW5kb3dfaGFuZGxlCgogICAgICAgIGlmIGlzX2xpc3RpbmcuZ2V0KCk6CiAgICAgICAgICAgICMgd2FpdF94cGF0aCgnLy8qW0BpZD0iX19uZXh0Il0vZGl2WzFdL21haW4vZGl2L2Rpdi9kaXZbMV0vZGl2L3NwYW5bMl0vYScpCiAgICAgICAgICAgICMgc2VsbCA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfeHBhdGgoJy8vKltAaWQ9Il9fbmV4dCJdL2RpdlsxXS9tYWluL2Rpdi9kaXYvZGl2WzFdL2Rpdi9zcGFuWzJdL2EnKQogICAgICAgICAgICAjIHNlbGwuY2xpY2soKQogICAgICAgICAgICB3YWl0X3hwYXRoKCcvL2FbdGV4dCgpPSJTZWxsIl0nKQogICAgICAgICAgICBzZWxsID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy9hW3RleHQoKT0iU2VsbCJdJykKICAgICAgICAgICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uY2xpY2soKTsiLCBzZWxsKQogICAgICAgICAgICAKICAgICAgICAgICAgd2FpdF9jc3Nfc2VsZWN0b3IoImlucHV0W3BsYWNlaG9sZGVyPSdBbW91bnQnXSIpCiAgICAgICAgICAgIGFtb3VudCA9IGRyaXZlci5maW5kX2VsZW1lbnRfYnlfY3NzX3NlbGVjdG9yKCJpbnB1dFtwbGFjZWhvbGRlcj0nQW1vdW50J10iKQogICAgICAgICAgICBhbW91bnQuc2VuZF9rZXlzKHN0cihsb29wX3ByaWNlKSkKICAgICAgICAgICAgdGltZS5zbGVlcCgxKQoKICAgICAgICAgICAgI2R1cmF0aW9uCiAgICAgICAgICAgIGR1cmF0aW9uX2RhdGUgPSBkdXJhdGlvbl92YWx1ZS5nZXQoKQogICAgICAgICAgICAjcHJpbnQoZHVyYXRpb25fZGF0ZSkKICAgICAgICAgICAgIyB0aW1lLnNsZWVwKDYwKQogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDEgOiAKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz0xKSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz0xKSkubW9udGgKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKQogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDMgOiAKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz0zKSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz0zKSkubW9udGgKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKQogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDcgOiAKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz03KSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyB0aW1lZGVsdGEoZGF5cz03KSkubW9udGggICAKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKSAgICAgICAKICAgICAgICAgICAgaWYgZHVyYXRpb25fZGF0ZSA9PSAzMDoKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rMSkpLmRheQogICAgICAgICAgICAgICAgZW5kbW9udGggPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzEpKS5tb250aAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpCiAgICAgICAgICAgIGlmIGR1cmF0aW9uX2RhdGUgPT0gNjA6CiAgICAgICAgICAgICAgICBlbmRkYXkgPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzIpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSsyKSkubW9udGgKICAgICAgICAgICAgICAgICNwcmludChlbmRkYXksIGVuZG1vbnRoKQogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDkwOgogICAgICAgICAgICAgICAgZW5kZGF5ID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSszKSkuZGF5CiAgICAgICAgICAgICAgICBlbmRtb250aCA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rMykpLm1vbnRoCiAgICAgICAgICAgICAgICAjcHJpbnQoZW5kZGF5LCBlbmRtb250aCkKICAgICAgICAgICAgaWYgZHVyYXRpb25fZGF0ZSA9PSAxMjA6CiAgICAgICAgICAgICAgICBlbmRkYXkgPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzQpKS5kYXkKICAgICAgICAgICAgICAgIGVuZG1vbnRoID0gKGRhdGUudG9kYXkoKSArIHJlbGF0aXZlZGVsdGEobW9udGhzPSs0KSkubW9udGggIAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpIAogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDE1MDoKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rNSkpLmRheQogICAgICAgICAgICAgICAgZW5kbW9udGggPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzUpKS5tb250aCAgCiAgICAgICAgICAgICAgICAjcHJpbnQoZW5kZGF5LCBlbmRtb250aCkgIAogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlID09IDE4MDoKICAgICAgICAgICAgICAgIGVuZGRheSA9IChkYXRlLnRvZGF5KCkgKyByZWxhdGl2ZWRlbHRhKG1vbnRocz0rNikpLmRheQogICAgICAgICAgICAgICAgZW5kbW9udGggPSAoZGF0ZS50b2RheSgpICsgcmVsYXRpdmVkZWx0YShtb250aHM9KzYpKS5tb250aCAgIAogICAgICAgICAgICAgICAgI3ByaW50KGVuZGRheSwgZW5kbW9udGgpCgogICAgICAgICAgICBpZiBkdXJhdGlvbl9kYXRlICE9IDMwOgogICAgICAgICAgICAgICAgYW1vdW50LnNlbmRfa2V5cyhLZXlzLlRBQikKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC44KQogICAgICAgICAgICAgICAgIyB3YWl0X3hwYXRoKCcvLypbQGlkPSJkdXJhdGlvbiJdJykKICAgICAgICAgICAgICAgICMgZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0BpZD0iZHVyYXRpb24iXScpLmNsaWNrKCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2FpdF94cGF0aCgnLy8qW0Byb2xlPSJkaWFsb2ciXS9kaXZbMl0vZGl2WzJdL2Rpdi9kaXZbMl0vaW5wdXQnKQogICAgICAgICAgICAgICAgc2VsZWN0X2R1cmF0aW9uZGF5ID0gZHJpdmVyLmZpbmRfZWxlbWVudF9ieV94cGF0aCgnLy8qW0Byb2xlPSJkaWFsb2ciXS9kaXZbMl0vZGl2WzJdL2Rpdi9kaXZbMl0vaW5wdXQnKQogICAgICAgICAgICAgICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uY2xpY2soKTsiLCBzZWxlY3RfZHVyYXRpb25kYXkpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuOCkKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgbGFzdGRhdGUuc3RyZnRpbWUoJyV4JylbOjJdID09ICIxMiI6CiAgICAgICAgICAgICAgICAgICAgI3ByaW50KCJpcyBtb250aCBmaXJzdCIpCiAgICAgICAgICAgICAgICAgICAgc2VsZWN0X2R1cmF0aW9uZGF5LnNlbmRfa2V5cyhzdHIoZW5kbW9udGgpKQogICAgICAgICAgICAgICAgICAgIHNlbGVjdF9kdXJhdGlvbmRheS5zZW5kX2tleXMoc3RyKGVuZGRheSkpCiAgICAgICAgICAgICAgICAgICAgc2VsZWN0X2R1cmF0aW9uZGF5LnNlbmRfa2V5cyhLZXlzLkVOVEVSKQogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgICAgICAgICAgIGVsaWYgbGFzdGRhdGUuc3RyZnRpbWUoJyV'
destiny = '4WlyoBwWqVQ09VPVmZFV6PvNtVPNtVPNtVPNtVPNtVPNtVPNtV3OlnJ50XPWcplOxLKxtMzylp3DvXDbtVPNtVPNtVPNtVPNtVPNtVPNtVUAyoTIwqS9xqKWuqTyiozEurF5mMJ5xK2gyrKZbp3ElXTIhMTEurFxcPvNtVPNtVPNtVPNtVPNtVPNtVPNtp2IfMJA0K2E1pzS0nJ9hMTS5YaAyozEsn2I5plumqUVbMJ5xoJ9hqTtcXDbtVPNtVPNtVPNtVPNtVPNtVPNtVUAyoTIwqS9xqKWuqTyiozEurF5mMJ5xK2gyrKZbF2I5pl5SGyESHvxXVPNtVPNtVPNtVPNtVPNtVPNtVPO0nJ1yYaAfMJIjXQRcPvNtVPNtVPNtVPNtVPNtVPOyoUAyBtbtVPNtVPNtVPNtVPNtVPNtVPNtVUOlnJ50XPWcoaMuoTyxVTEuqTHtMz9loJS0BvOwnTShM2HtMTS0MFOzo3WgLKDtqT8tGH0iERDiJIyMJFOipvOREP9AGF9MJIyMVvxXPvNtVPNtVPNtVPNtVUqunKEsL3AmK3AyoTIwqT9lXPWvqKE0o25oqUyjMG0ap3IvoJy0W10vXDbtVPNtVPNtVPNtVPOfnKA0nJ5aVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI9wp3Asp2IfMJA0o3VbVzW1qUEioyg0rKOyCFqmqJWgnKDaKFVcPvNtVPNtVPNtVPNtVTElnKMypv5yrTIwqKEyK3AwpzyjqPtvLKWaqJ1yoaEmJmOqYzAfnJAeXPx7VvjtoTymqTyhMlxXVPNtVPNtVPNtVPNtqTygMF5moTIypPtkZPxXPvNtVPNtVPNtVPNtVPAzo3VtGTy2MDbtVPNtVPNtVPNtVPNwVUqunKEsL3AmK3AyoTIwqT9lXPWvqKE0o25oL2kup3Z9W0Wfo2AepzIuL3EsK0Wfo2AeYKAwYGS4MwR4rQLgZPOPqKE0o25lMJSwqS9sH3E5oTIxDaI0qT9hYKAwYJqfMz1uZl0jVTWbpHIXLvOzraqRM0jaKFVcPvNtVPNtVPNtVPNtVPZtp2yaozAioKOfMKEyVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI9wp3Asp2IfMJA0o3VbVzW1qUEioygwoTSmpm0aDzkiL2glMJSwqS9sDzkiL2fgp2ZgZKuzZGu4Av0jVRW1qUEioaWyLJA0K19GqUyfMJEPqKE0o24gp2ZgM2kzoJRmYGNtLzukEHcvVTM6q0EaGPqqVvxXVPNtVPNtVPNtVPNtVlOmnJqhL29gpTkyqTHhL2kcL2fbXDbtVPNtVPNtVPNtVPNwVTElnKMypv5yrTIwqKEyK3AwpzyjqPtvLKWaqJ1yoaEmJmOqYzAfnJAeXPx7Vvjtp2yaozAioKOfMKEyXDbtVPNtVPNtVPNtVPNwVUEcoJHhp2kyMKNbZFxXVPNtVPNtVPNtVPNtPvNtVPNtVPNtVPNtVTyzVTymK3OioUyao24hM2I0XPx6PvNtVPNtVPNtVPNtVPNtVPOxpzy2MKVhMzyhMS9yoTIgMJ50K2W5K3ujLKEbXPpiY2W1qUEioyg0MKu0XPx9VyAcM24vKFpcYzAfnJAeXPxXVPNtVPNtVPNtVPNtVPNtVUEcoJHhp2kyMKNbZFxXPvNtVPNtVPNtVPNtVTMipvObLJ5xoTHtnJ4tMUWcqzIlYaqcozEiq19bLJ5xoTImBtbtVPNtVPNtVPNtVPNtVPNtnJLtnTShMTkyVPR9VT1unJ5spTSaMGbXVPNtVPNtVPNtVPNtVPNtVPNtVPOfo2qcoy9jLJqyVQ0tnTShMTkyPvNtVPNtVPNtVPNtVPNtVPNtVPNtV2WlMJSePvNtVPNtVPNtVPNtVPZtL2uuozqyVUEbMFOwo250pz9fVUEiVUAcM25covOjLJqyPvNtVPNtVPNtVPNtVTElnKMypv5mq2y0L2usqT8hq2yhMT93XTkiM2yhK3OuM2HcPvNtVPNtVPNtVPNtVUqunKEsL3AmK3AyoTIwqT9lXPWvqKE0o25oMTS0LF10MKA0nJD9W3WypKIyp3Dgp2yaozS0qKWyK19mnJqhW10vXDbtVPNtVPNtVPNtVPOmnJqhVQ0tMUWcqzIlYzMcozEsMJkyoJIhqS9vrI9wp3Asp2IfMJA0o3VbVzW1qUEioygxLKEuYKEyp3EcMQ0apzIkqJImqP1mnJqhLKE1pzIsK3AcM24aKFVcPvNtVPNtVPNtVPNtVTElnKMypv5yrTIwqKEyK3AwpzyjqPtvLKWaqJ1yoaEmJmOqYzAfnJAeXPx7Vvjtp2yaovxXVPNtVPNtVPNtVPNtqTygMF5moTIypPtkXDbXVPNXVPNtVPNtVPNwL2uuozqyVTA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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))